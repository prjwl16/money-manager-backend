// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Use auto increment for id
model User {
  id                   Int                    @id @default(autoincrement())
  firstName            String?
  lastName             String?
  phone                String?                @unique
  email                String?                @unique
  role                 UserRole               @default(USER)
  createdAt            DateTime               @default(now()) @db.Timestamp()
  updatedAt            DateTime               @updatedAt @db.Timestamp()
  googleId             String?                @unique
  avatar               String?
  swUserId             Int?                   @unique
  swAccessToken        String?
  doneSetup            Boolean                @default(false)
  // Relations
  transaction          Transaction[]
  accounts             Account[]
  categories           Category[]
  recurringTransaction RecurringTransaction[]
}

model Transaction {
  id                     Int                   @id @default(autoincrement())
  type                   TransactionAction     @default(EXPENSE)
  amount                 Float
  currency               Currency              @default(INR)
  name                   String?
  description            String?
  date                   DateTime?
  place                  String?
  createdAt              DateTime              @default(now()) @db.Timestamp()
  updatedAt              DateTime              @updatedAt @db.Timestamp()
  status                 TransactionStatus     @default(PENDING)
  // Relations
  createdBy              Int
  user                   User                  @relation(fields: [createdBy], references: [id])
  accountId              Int
  category               Category?             @relation(fields: [categoryId], references: [id])
  categoryId             Int
  account                Account?              @relation(fields: [accountId], references: [id])
  isRecurring            Boolean               @default(false)
  recurringTransactionId Int?
  recurringTransactions  RecurringTransaction? @relation(fields: [recurringTransactionId], references: [id])
}

model RecurringTransaction {
  id                  Int               @id @default(autoincrement())
  type                TransactionAction @default(EXPENSE)
  amount              Float
  currency            Currency          @default(INR)
  name                String?
  description         String?
  date                DateTime?
  place               String?
  recurringPeriod     RecurringPeriod   @default(MONTHLY)
  numberOfOccurrences Int?              @default(0)
  startDate           DateTime?
  endDate             DateTime?
  isActive            Boolean           @default(true)
  nextExecutionDate   DateTime?
  createdBy           Int
  user                User              @relation(fields: [createdBy], references: [id])
  accountId           Int
  category            Category?         @relation(fields: [categoryId], references: [id])
  categoryId          Int
  account             Account?          @relation(fields: [accountId], references: [id])
  createdAt           DateTime          @default(now()) @db.Timestamp()
  updatedAt           DateTime          @updatedAt @db.Timestamp()
  Transaction         Transaction[]
}

model Account {
  id                   Int                    @id @default(autoincrement())
  name                 String
  type                 AccountType            @default(CASH)
  balance              Float                  @default(0)
  isDefault            Boolean                @default(false)
  createdAt            DateTime               @default(now()) @db.Timestamp()
  updatedAt            DateTime               @updatedAt @db.Timestamp()
  // Relations
  userId               Int
  user                 User?                  @relation(fields: [userId], references: [id])
  transaction          Transaction[]
  RecurringTransaction RecurringTransaction[]
}

model Category {
  id                   Int                    @id @default(autoincrement())
  name                 String
  isDefault            Boolean                @default(false)
  createdAt            DateTime               @default(now()) @db.Timestamp()
  updatedAt            DateTime               @updatedAt @db.Timestamp()
  // Relations
  userId               Int?
  user                 User?                  @relation(fields: [userId], references: [id])
  transactions         Transaction[]
  RecurringTransaction RecurringTransaction[]
}

// Enums
enum UserRole {
  USER
  ADMIN
}

enum TransactionAction {
  INCOME
  EXPENSE
  SELF_TRANSFER
  INVESTMENT
}

enum RecurringPeriod {
  ONETIME
  DAILY
  WEEKLY
  MONTHLY
  QUARTERLY
  HALF_YEARLY
  YEARLY
}

enum AccountType {
  CASH
  BANK
  CREDIT_CARD
  DEBIT_CARD
  LOAN
}

enum Currency {
  INR
  USD
}

enum TransactionStatus {
  PENDING
  COMPLETED
  CANCELLED
  SKIPPED
}
